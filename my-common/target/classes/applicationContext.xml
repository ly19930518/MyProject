<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/task
          http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- 装载service -->
	<context:component-scan base-package="**.service" />

	<!-- 装载自定义bean -->
	<context:component-scan base-package="**.*" use-default-filters="false">
		<context:include-filter type="assignable" expression="com.zheng.common.base.BaseInterface"></context:include-filter>
	</context:component-scan>

	<!-- 定义加载的配置文件 -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<!-- 若数据库中连接数不足时，一次向数据库服务器申请多少个连接    -->
		<property name="acquireIncrement" value="5" />
		<!-- 初始化数据库连接时连接的数量 -->
		<property name="initialPoolSize" value="10" />
		<!-- 数据库连接池中最小的数据库连接数 -->
		<property name="minPoolSize" value="10" />
		<!-- 数据库连接池中最大的数据库连接数 -->
		<property name="maxPoolSize" value="30" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:facebook/mybatisConfig.xml"></property>
		<property name="mapperLocations" value="classpath:facebook/mapper/*.xml" />
	</bean>

	<!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.facebook.dao" />
	</bean>

	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 启动时初始化Spring上下文环境工具类 -->
	<bean id="springContextUtil" class="com.zheng.common.util.SpringContextUtil"></bean>

	<!-- 启动任务注解 -->
	<task:annotation-driven />
	<context:component-scan base-package="**.task" />

</beans>